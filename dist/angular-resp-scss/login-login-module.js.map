{"version":3,"sources":["./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { HomeService } from 'src/app/_services/home.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginForm!: FormGroup;\n  public hide = true;\n  public errMessage = ''\n  constructor(private hService: HomeService, \n    private authSer: AuthService,\n    private router: Router,\n    private formBuilder: FormBuilder) { }\n    // routerLink=\"/verify-otp/1\"\n  ngOnInit(): void {\n    this.hService.makeYellow();\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      this.authSer.login(this.loginForm.value).subscribe(res => {\n        if (res.message) {\n          this.router.navigate(['/verify-otp/1']);\n        } else {\n          this.errMessage = 'Invalid username or password !';\n        }\n      }, err => {\n        this.errMessage = 'Invalid username or password !';\n      })\n    }\n  }\n}\n","<div class=\"container-fluid bg-3 \" style=\"background-color: #E8EF01; height: 100vh;\">    \n    \n    <div class=\"loginRow\">\n      <div class=\"left\">\n        <div class=\"leftText\">\n            Sign Up to Pre-Register for products and to earn through referrals. <br>\n            <span class=\"tagLine\">You need to be atleast 18 years of age to create an account with us.</span>\n        </div>\n        <div class=\"iImage\">\n          <img src=\"assets/images/signupsignin.png\" class=\"iImage\" alt=\"illustration\">\n        </div>\n      </div>\n      <div class=\"right\"> \n        <div class=\"buttonsGroup\">\n          <div *ngIf=\"errMessage\" class=\"errMsg\">\n            {{ errMessage }}\n          </div><br>\n            <form [formGroup]=\"loginForm\" id=\"data\" method=\"post\" class=\"example-form\">\n                \n                <mat-form-field class=\"example-full-width\">\n                    <mat-label >Email Address</mat-label>\n                    <input type=\"email\" formControlName=\"email\"  matInput>\n                    <mat-error >\n                      Please enter a valid email address\n                    </mat-error>\n                    <!-- <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n                      Email is <strong>required</strong>\n                    </mat-error> -->\n                  </mat-form-field>\n                  \n                  \n                  <mat-form-field class=\"example-full-width\" style=\"width: 382px;\">\n                    <mat-label >Password</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n                    <span matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                        {{hide ? 'SHOW' : 'HIDE'}}\n                    </span>\n                    <mat-error >\n                      Please enter a password\n                    </mat-error>\n                    <!-- <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n                      Email is <strong>required</strong>\n                    </mat-error> -->\n                  </mat-form-field>\n              </form>\n              <input type=\"button\" class=\"spanBtn\" value=\"LOGIN\" (click)=\"login()\">\n              <div class=\"backToLogin\" routerLink=\"/signup\">\n                ‚Üê BACK TO ALL SIGN UP OPTIONS\n              </div>\n              <div class=\"tagLine\">\n                By Signing Up you agree to the Terms and Conditions and Privacy Policy set forth by BidMouse.\n              </div>\n        </div>\n        \n      </div>    \n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class LoginModule { }\n"],"sourceRoot":"webpack:///"}